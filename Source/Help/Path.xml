<?xml version="1.0" encoding="utf-8"?>
<Help>
  <Command Name="Path" Modified="9/16/2017" />
  <Syntax>{del|end|ins|load|map|new|save|run|walk} {argument}</Syntax>
  <Description>
The path command is a quick and easy way to record your movements and create a list of commands to move from one location to
another, and back. For a far more advanced mapper check out the #map command.

#path {new}

This command starts the path tracking mode. If you enter a movement command (listed with #pathdir) it will be added to your
path.

#path {end}

After you started path tracking with #path new, you can stop with #path end. This won't erase the created path, though typing
#path new again would.

#path {map}

This command displays the path created so far, it shows a list of commands and not a graphical map.

#path {ins} {forward command} {backward command}

Sometimes you need to open doors when walking from here to there, with this option you can insert commands into a path you're
creating. When creating a path from A to B, you automatically create a backwards path from B to A as well. Hence the second
argument is the command that is inserted for the backward path.

Example: #path ins {open north} {};n;#path ins {} {open south}
#path {del}

Removes the last move in the path.

Example: #action {Alas, you cannot go that way.} {#path del}
#path {save} {forward|backward} {variable}

This command saves the created path to the provided variable, you must specify whether to save the path forward, or backward.
You can use f and b for short. If you use: #path save f AtoB you can execute the saved path using: $AtoB.

Example: #path new;n;n;n;e;e;e;#path save backward return;$return
#path {load} {variable}

This command will load any given variable as a path, and doesn't necesarily need to be movement related.

#path {run} {delay}

For this command to work you must have created or loaded a path. Upon execution all commands in your path are removed and
executed at once, unless you provide the optional delay argument to delay execution between each command with the given
floating point number of seconds.

Example: #path run 0.5
#path {walk} {forward|backward}

For this command to work you must have created or loaded a path. Upon execution the next command in your path queue is
removed and executed. If the end of your path is reached this triggers the END OF PATH event.

Example: #tick {slowwalk} {#walk f} {0.5};#event {END OF PATH} {#untick slowwalk}
</Description>
</Help>